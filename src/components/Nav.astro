---
import Icon from 'astro-icon';
import routes from '../utils/routes.json'
import Link from './Link.astro';
import ThemeToggleButton from './ThemeToggleButton.svelte';
import Hamburger from './Hamburger.astro';

const currentPath = Astro.url.pathname; 
const isActiveLink = (path) => currentPath === path;
---

<nav aria-label="Primary" class="bg-cyan-600 text-white dark:bg-slate-600">
  <div class="container mx-auto flex justify-between items-center p-4 lg:p-6">
    <a href="/" class="logomark" aria-label="Go home">      
      <Icon name="logomark" width="60" />
    </a>
    <button id="menu-btn" class="hamburger md:hidden focus:outline-none" type="button">
      <Hamburger/>
    </button>
    <div id="menu" class="nav-links-container hidden md:flex flex-col md:flex-row items-center">
      {routes.map(({ name, path }) => (
        <Link
          text={name}
          href={path}
          style={'primary'}
          isFilled={false}
          classes={`data-nav-link nav-link ${isActiveLink(path) ? 'nav-link-active' : ''}`}
        />
      ))}
      <div class="theme-toggle-container">
        <ThemeToggleButton client:load />
      </div>
    </div>
  </div>
</nav>

<script>
  // Function to initialize or reinitialize the hamburger menu
  function initHamburgerMenu() {
    const btn = document.getElementById('menu-btn');
    const menu = document.getElementById('menu');

    if (btn && menu) {
      // Remove existing event listeners to avoid duplicates
      btn.removeEventListener('click', handleMenuToggle);

      // Define the toggle function
      function handleMenuToggle() {
        menu.classList.toggle('hidden');
        menu.classList.toggle('flex'); 
        btn.querySelector('.hamburger').classList.toggle('open');
      }

      btn.addEventListener('click', handleMenuToggle);
    }
  }

  initHamburgerMenu();

  // Reinitialize on page navigation
  document.addEventListener('astro:after-swap', initHamburgerMenu);
</script>


<style>
 :root {   
    --nav-height: 95px;

  }

  nav {
    align-items: center;
    display: flex;
    flex: 1;
    font-family: var(--font-family-sans);
    font-weight: 700;
    justify-content: flex-end;
    text-transform: uppercase;
  }

  a {
    color: inherit;
    text-decoration: none;
    padding: 10px 5px;
    display: block;
    position: relative;
    margin-left: 20px;
    min-width: 70px;
    text-align: center;
  }

  a:not(.selected) {
    opacity: 0.7;
  }

  a::before {
    content: '';
    position: absolute;
    transition: transform .3s ease;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 2px;
    background: var(--text-secondary);
    transform: scaleX(0);
  }

  a:hover::before,
  .selected::before {
    transform: scaleX(1);
  }

  .selected::before {
    background: var(--primary-color);
  }

  .theme-toggle-container {
    width: 75px;
  }
  @media (max-width: 768px) {
    .nav-links-container {
      /* Apply background, padding, and flex properties to display the menu */
      display: none; 
      background-color: #333; /* Example background color */
      padding-top: 1rem;
      flex-direction: column;
      position: absolute;
      padding-bottom: 2rem;
      top: var(--nav-height); /* Adjust based on your actual nav height */
      width: 100%;
      left: 0;
      z-index: 10;
    }

    .nav-links-container.flex {
      display: flex; /* Displayed when the menu button is clicked */
    }
    .theme-toggle-container {
      position: absolute;
      left: 0;
      bottom: 0;
      padding-bottom: 1.5rem;
    }
  }
  .nav-link-active{
    text-decoration: underline;
  }

  
</style>