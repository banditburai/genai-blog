---
// component import
import { getCollection } from "astro:content";
import PostHeader from "../components/PostHeader.astro";
import CategoryCloud from "../components/CategoryCloud.astro";
import RelatedPosts from "../components/RelatedPosts.astro";

// util imports
import { formatBlogPosts } from "../utils/blogutils";
const { frontmatter } = Astro.props;

if (!frontmatter) {
  console.warn('No frontmatter provided to BlogPostLayout');
  return;
}
const { title, description, date, category, author, cover } = frontmatter;

const allPosts = await getCollection('posts');
const formattedPosts = formatBlogPosts(allPosts, {
  sortByDate: false,
});
const related = formattedPosts
  .filter(
    (post) =>
      post.data.category.toLowerCase() === category.toLowerCase() &&
      post.data.title !== title
  )
  .slice(0, 3);
  const relatedPosts = related.length ? related : [];

---

  <PostHeader {title} {description} {date} {category} {cover} {author} />

  <div class="post-content md:flex md:justify-between md:items-start md:space-x-8">
    <div class="content md:w-2/3">
      <slot />
    </div>
    <div class="sidebar">
      <aside class="container md:w-1/3 space-y-8" aria-label="Blog categories">
        <h2 class="h3">Blog Categories</h2>
        <CategoryCloud />
      </aside>
      {
        relatedPosts.length > 0 && (
          <aside class="container" aria-label="Related posts">
            <h2 class="h3">Related Posts</h2>
            <RelatedPosts posts={relatedPosts} />
          </aside>
        )
      }
    </div>
  </div>
